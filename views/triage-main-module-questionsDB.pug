extends layout.pug

block append content

	div.container-fluid

		div.jumbotron
			h1 Challenge Questions
			h2 Member ID #{ member_id }
			h2 Admin ID #{ id }
			//- h2 Student ID #{ member_student_id }
			h2 #{ first_name } #{ last_name } #{ name }'s Admin Questions Interface.
			br
			p #{ message }
			div.table
				table.table-active.table-dark.table-striped.table-bordered.table-hover.table-responsive.table-condensed.small
					thead.thead-dark
						tr.small
							if membership_role === 'Local Administrator' || userLevel 
								th Author ID
							th Delete Content
							th Text ID
							th Text Image
							th Text Title
							th Text Number
							th Text Sub Title 
							th Text Content 
							th Question Module Group
							th Question Title
							th Question Sub Title
							th Question Timer
							th Question Number
							th Question Text
							th Question Checkbox Title
							th Question Checkbox

						tr.small
						- console.log("ModuleTexts PT DB II", data)
						- console.log("ModuleTexts PT DB Length", data.length)
						- let pageText = [];
						- for (let i=0; i<data.length; i++){							console.log("Data Length", data.length); let newPage = data[i]; pageText.push(newPage);};
						each newPage in pageText
							tr.small
								if membership_role === 'Local Administrator' || userLevel 
									td #{ id }
								if userLevel 
									td 
										form(action="/secureMainModuleQuestionsDB/" + id method="post") 
											input(type="text" name="text_id" value=newPage._id hidden)
											button(type="submit") &times;
								td #{ newPage._id}
								td #{ newPage.textImage}
								td #{ newPage.textTitle}
								td #{ newPage.textNumber}
								td #{ newPage.textSubTitle}
								td #{ newPage.textContent}
								td #{ newPage.questionGroupModule}
								td #{ newPage.questionTitle}
								td #{ newPage.questionSubTitle}
								td #{ newPage.questionTimer}
								td #{ newPage.questionNumber}
								td #{ newPage.questionText}
								td #{ newPage.questionCheckboxTitle}
								td #{ newPage.questionCheckbox}

						//- - console.log("ModuleTexts PT II", each data in data)
							td 
							td 
							td 
							//- td test ID #{ moduletexts._id }
							//- td Fixed Image #{ moduletexts.textImage }
							//- td Fixed Title #{ moduletexts.textTitle }
							//- td Fixed Text Number #{ moduletexts.textNumber }
							//- td Fixed Sub Title#{ moduletexts.textSubTitle }
							//- td Fixed Content #{ moduletexts.textContent }
							//- td Fixed Group Module #{ moduletexts.questionGroupModule }
							//- td Fixed Question Title #{ moduletexts.questionTitle }
							//- td Fixed Question Timer #{ moduletexts.questionTimer }
							//- td Fixed Question Number #{ moduletexts.questionNumber }
							//- td Fixed Question Text #{ moduletexts.questionText }
							//- td Fixed Question CheckboxTitle #{ moduletexts.questionCheckboxTitle }
							//- td Fixed Question Checkbox #{ moduletexts.questionCheckbox }
							td There are no answers.
			//- - console.log("ModuleTexts", each moduletext in moduletexts)
					//- each moduletext in moduletexts

						tr.small
							if membership_role === 'Local Administrator' || userLevel
								td 
									button.btn.btn-sm
										a.link(href="/updateMemberProfileDB/" + student.id) &#9998;
								td #{student.id}
							td 
								button.btn-outline-light
									a.link(href="/updateStudentAnswers/" + answer.id) &times;
							//- form(action="/updateStudentAnswers/" + member_student_id method="post")
							
							td #{moduletext._id}
							td #{moduletext.questionGroupModule}
							td #{moduletext.textImage}
							td #{moduletext.textTitle}
							td #{moduletext.textSubTitle}
							td #{moduletext.textNumber}
							td #{moduletext.textContent}
							td #{moduletext.questionModule}
							td #{moduletext.questionTitle}
							td #{moduletext.questionNumber}
							td #{moduletext.answerDate.toDateString()}
							td #{moduletext.answerText}
							td #{moduletext.questionText}


							//- td #{student.date_member_joined.toDateString()}
							//- if membership_role === 'Local Administrator' || userLevel
							//- 	td #{member.password}
					//- else
							//- td There are no answers.